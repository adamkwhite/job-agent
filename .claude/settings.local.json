{
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(python3:*)",
      "Bash(./lineup-venv/bin/pip list)",
      "Bash(test -f .env)",
      "Bash(grep:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(./lineup-venv/bin/python:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(gh pr create:*)",
      "Bash(source:*)",
      "Bash(./start.sh:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(fuser:*)",
      "Bash(git commit:*)",
      "Bash(git restore:*)",
      "Bash(gh pr list:*)",
      "Read(//home/adam/Code/**)",
      "Bash(systemctl:*)",
      "Bash(git pull:*)",
      "Bash(git mv:*)",
      "mcp__puppeteer__puppeteer_navigate",
      "Bash(git reset:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(docker:*)",
      "Bash(docker.exe pull:*)",
      "Read(//home/adam/.claude/scripts/**)",
      "WebFetch(domain:github.com)",
      "Bash(gh pr checks:*)",
      "Bash(./lineup-venv/bin/pip install pytest-playwright pytest-mock)",
      "Bash(./lineup-venv/bin/playwright install chromium)",
      "Bash(tree:*)",
      "Bash(gh run watch:*)",
      "WebFetch(domain:44.206.255.230)",
      "Bash(curl -s \"http://44.206.255.230:9000/api/issues/search?componentKeys=multisport-lineup-app&resolved=false&inNewCodePeriod=true&ps=50\")",
      "Bash(gh pr view:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr merge:*)",
      "Bash(./lineup-venv/bin/pytest:*)",
      "Bash(git grep:*)",
      "Bash(git log:*)",
      "WebFetch(domain:api.teamsnap.com)",
      "WebFetch(domain:www.teamsnap.com)",
      "Bash(gh label create:*)",
      "Bash(test-venv/bin/pip install:*)",
      "Bash(test-venv/bin/isort app.py tests/unit/test_utility_functions.py tests/edge_cases/test_edge_case_lineup.py)",
      "Bash(gh issue create:*)",
      "Bash(find:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(gh issue close:*)",
      "Bash(done)",
      "Bash(gh issue list:*)",
      "Bash(column -t -s:*)",
      "Bash(pgrep:*)",
      "Bash(mv:*)",
      "Bash(./lineup-venv/bin/pre-commit run --all-files)",
      "Bash(gh pr close:*)",
      "Bash(./lineup-venv/bin/python3 -c \"\nfrom tests.unit.test_baseball_generator import baseball_config\nimport pytest\nconfig = baseball_config(None)\nfor p in config.positions:\n    print(f''{p.id}: {p.name}'')\n\")",
      "Bash(python:*)",
      "mcp__playwright__browser_close",
      "Bash(job-agent-venv/bin/python:*)",
      "Bash(make lint:*)",
      "Bash(job-agent-venv/bin/ruff check:*)",
      "Bash(make typecheck:*)",
      "Bash(make all:*)",
      "mcp__sonarcloud__search_sonar_issues_in_projects",
      "mcp__sonarcloud__get_project_quality_gate_status",
      "mcp__sonarcloud__show_rule",
      "Bash(gh issue view:*)",
      "Bash(gh issue reopen:*)",
      "Bash(job-agent-venv/bin/pip show:*)",
      "mcp__time__get_current_time",
      "mcp__claude-memory__add_conversation",
      "Bash(./job-agent-venv/bin/python:*)",
      "Bash(PYTHONPATH=/home/adam/Code/job-agent job-agent-venv/bin/python:*)",
      "Bash(PYTHONPATH=/home/adam/Code/job-agent job-agent-venv/bin/pytest:*)"
    ],
    "deny": []
  }
}
